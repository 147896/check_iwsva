#!/usr/bin/python
# SCRIPT PYTHON TEST HEALTH PROXY SERVERS, TEST DNS
# VERIFY OUTSIDE IPADDRESS LINK AND NUMBERS CONNECTION
# PORT LISTEN 8080 (IWSVA TREND MICRO) ESTABLISHED AND
# CLOSE_WAIT TO MONITORING NAGIOS, ZABBIX, ETC.

# REMOTE CONNECTION WITH PARAMIKO SSH.

import os
import sys, getopt
import paramiko

verbose = False

options, remainder = getopt.getopt(sys.argv[1:], 's:v', ['server', 'verbose'])

for opt, arg in options:
   if opt in ('-s', '--server'):
       server = arg
   elif opt in ('-v', '--verbose'):
       verbose = True

# define credentials and connection information.
server,username, password = (server,'youruserremote', 'yourpassremote')
ssh = paramiko.SSHClient()

ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

# write known_hosts file. auto-check.
ssh.load_host_keys(os.path.expanduser(os.path.join('~', '.ssh', 'known_hosts')))

ssh.connect(server,username=username, password=password)
ssh_stdin, ssh_stdout, ssh_stderr = ssh.exec_command('/home/opmon/checkLinkSaida')

# exit code when success.
if ssh_stderr.channel.recv_exit_status() == 0:
   sys.stdout.write(ssh_stdout.read())
   sys.exit(0)

# exit code when warning
if ssh_stderr.channel.recv_exit_status() == 1:
   sys.stdout.write(ssh_stdout.read())
   sys.exit(1)

# exit code when critical
if ssh_stderr.channel.recv_exit_status() == 2:
   sys.stdout.write(ssh_stdout.read())
   sys.exit(2)

ssh.close()
